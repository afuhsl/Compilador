
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightPLUSPLUSMINUSMINUSleftPLUSMINUSleftTIMESDIVIDEMODrightPOWERAND CASE CIN COMMA COUT DEQUAL DIVIDE DO DOUBLE ELSE END EQUAL GREATER GREATEREQUAL ID IF INT LBRACE LESS LESSEQUAL LPAREN MAIN MINUS MINUSMINUS MOD NEQUAL NUMBER OR PLUS PLUSPLUS POWER RBRACE RPAREN SEMICOLON SWITCH TIMES WHILEprograma : MAIN LBRACE listaDeclaracion RBRACElistaDeclaracion : listaDeclaracion declaracion\n                        | declaraciondeclaracion : declaracionVariable\n                | listaSentenciasdeclaracionVariable : tipo listaIdentificadores SEMICOLONlistaIdentificadores : ID\n                            | ID COMMA listaIdentificadorestipo : INT\n            | DOUBLElistaSentencias : listaSentencias sentencia\n                       | sentencia\n                       | emptysentencia : seleccion\n                 | iteracion\n                 | repeticion\n                 | sentIn\n                 | sentOut\n                 | asignacion\n                 | incrementoasignacion : ID EQUAL sentExpresion SEMICOLONincremento : ID PLUSPLUS SEMICOLON\n                  | ID MINUSMINUS SEMICOLON\n                  | PLUSPLUS ID SEMICOLON\n                  | MINUSMINUS ID SEMICOLONsentExpresion : expresion\n                     | incremento\n                     | SEMICOLONseleccion : IF expresion LBRACE listaSentencias RBRACE\n                 | IF expresion LBRACE listaSentencias RBRACE ELSE LBRACE listaSentencias RBRACEiteracion : WHILE expresion LBRACE listaSentencias RBRACErepeticion : DO LBRACE listaSentencias RBRACE WHILE expresionsentIn : CIN ID SEMICOLONsentOut : COUT expresion SEMICOLONexpresion : expresionSimple relacionOp expresionSimple\n                 | expresionSimplerelacionOp : LESS\n                  | LESSEQUAL\n                  | GREATER\n                  | GREATEREQUAL\n                  | DEQUAL\n                  | NEQUALexpresionSimple : expresionSimple sumaOp termino\n                       | terminosumaOp : PLUS\n              | MINUStermino : termino multOp factor\n               | factormultOp : TIMES\n              | DIVIDE\n              | MODfactor : factor potOp componente\n            | componentepotOp : POWERcomponente : LPAREN expresion RPAREN\n                | NUMBER\n                | IDempty :'
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,28,],[0,-1,]),'LBRACE':([2,22,33,34,35,36,37,39,40,41,85,86,87,88,89,96,],[3,42,52,-36,-44,-48,-53,-56,-57,70,-35,-43,-47,-52,-55,98,]),'INT':([3,4,5,6,7,9,10,13,14,15,16,17,18,19,29,30,34,35,36,37,39,40,50,72,78,79,80,81,82,85,86,87,88,89,92,93,94,97,100,],[11,11,-3,-4,-5,-12,-13,-14,-15,-16,-17,-18,-19,-20,-2,-11,-36,-44,-48,-53,-56,-57,-6,-33,-22,-23,-34,-24,-25,-35,-43,-47,-52,-55,-21,-29,-31,-32,-30,]),'DOUBLE':([3,4,5,6,7,9,10,13,14,15,16,17,18,19,29,30,34,35,36,37,39,40,50,72,78,79,80,81,82,85,86,87,88,89,92,93,94,97,100,],[12,12,-3,-4,-5,-12,-13,-14,-15,-16,-17,-18,-19,-20,-2,-11,-36,-44,-48,-53,-56,-57,-6,-33,-22,-23,-34,-24,-25,-35,-43,-47,-52,-55,-21,-29,-31,-32,-30,]),'IF':([3,4,5,6,7,9,10,13,14,15,16,17,18,19,29,30,34,35,36,37,39,40,42,50,52,70,71,72,78,79,80,81,82,84,85,86,87,88,89,90,92,93,94,97,98,99,100,],[20,20,-3,-4,20,-12,-13,-14,-15,-16,-17,-18,-19,-20,-2,-11,-36,-44,-48,-53,-56,-57,20,-6,20,20,20,-33,-22,-23,-34,-24,-25,20,-35,-43,-47,-52,-55,20,-21,-29,-31,-32,20,20,-30,]),'WHILE':([3,4,5,6,7,9,10,13,14,15,16,17,18,19,29,30,34,35,36,37,39,40,42,50,52,70,71,72,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,],[21,21,-3,-4,21,-12,-13,-14,-15,-16,-17,-18,-19,-20,-2,-11,-36,-44,-48,-53,-56,-57,21,-6,21,21,21,-33,-22,-23,-34,-24,-25,21,-35,-43,-47,-52,-55,21,95,-21,-29,-31,-32,21,21,-30,]),'DO':([3,4,5,6,7,9,10,13,14,15,16,17,18,19,29,30,34,35,36,37,39,40,42,50,52,70,71,72,78,79,80,81,82,84,85,86,87,88,89,90,92,93,94,97,98,99,100,],[22,22,-3,-4,22,-12,-13,-14,-15,-16,-17,-18,-19,-20,-2,-11,-36,-44,-48,-53,-56,-57,22,-6,22,22,22,-33,-22,-23,-34,-24,-25,22,-35,-43,-47,-52,-55,22,-21,-29,-31,-32,22,22,-30,]),'CIN':([3,4,5,6,7,9,10,13,14,15,16,17,18,19,29,30,34,35,36,37,39,40,42,50,52,70,71,72,78,79,80,81,82,84,85,86,87,88,89,90,92,93,94,97,98,99,100,],[23,23,-3,-4,23,-12,-13,-14,-15,-16,-17,-18,-19,-20,-2,-11,-36,-44,-48,-53,-56,-57,23,-6,23,23,23,-33,-22,-23,-34,-24,-25,23,-35,-43,-47,-52,-55,23,-21,-29,-31,-32,23,23,-30,]),'COUT':([3,4,5,6,7,9,10,13,14,15,16,17,18,19,29,30,34,35,36,37,39,40,42,50,52,70,71,72,78,79,80,81,82,84,85,86,87,88,89,90,92,93,94,97,98,99,100,],[25,25,-3,-4,25,-12,-13,-14,-15,-16,-17,-18,-19,-20,-2,-11,-36,-44,-48,-53,-56,-57,25,-6,25,25,25,-33,-22,-23,-34,-24,-25,25,-35,-43,-47,-52,-55,25,-21,-29,-31,-32,25,25,-30,]),'ID':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,29,30,34,35,36,37,38,39,40,42,44,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,78,79,80,81,82,84,85,86,87,88,89,90,92,93,94,95,97,98,99,100,],[24,24,-3,-4,24,32,-12,-13,-9,-10,-14,-15,-16,-17,-18,-19,-20,40,40,43,40,48,49,-2,-11,-36,-44,-48,-53,40,-56,-57,24,73,-6,32,24,40,40,-37,-38,-39,-40,-41,-42,-45,-46,40,-49,-50,-51,40,-54,24,24,-33,-22,-23,-34,-24,-25,24,-35,-43,-47,-52,-55,24,-21,-29,-31,40,-32,24,24,-30,]),'PLUSPLUS':([3,4,5,6,7,9,10,13,14,15,16,17,18,19,24,29,30,34,35,36,37,39,40,42,44,50,52,70,71,72,73,78,79,80,81,82,84,85,86,87,88,89,90,92,93,94,97,98,99,100,],[26,26,-3,-4,26,-12,-13,-14,-15,-16,-17,-18,-19,-20,45,-2,-11,-36,-44,-48,-53,-56,-57,26,26,-6,26,26,26,-33,45,-22,-23,-34,-24,-25,26,-35,-43,-47,-52,-55,26,-21,-29,-31,-32,26,26,-30,]),'MINUSMINUS':([3,4,5,6,7,9,10,13,14,15,16,17,18,19,24,29,30,34,35,36,37,39,40,42,44,50,52,70,71,72,73,78,79,80,81,82,84,85,86,87,88,89,90,92,93,94,97,98,99,100,],[27,27,-3,-4,27,-12,-13,-14,-15,-16,-17,-18,-19,-20,46,-2,-11,-36,-44,-48,-53,-56,-57,27,27,-6,27,27,27,-33,46,-22,-23,-34,-24,-25,27,-35,-43,-47,-52,-55,27,-21,-29,-31,-32,27,27,-30,]),'RBRACE':([3,4,5,6,7,9,10,13,14,15,16,17,18,19,29,30,34,35,36,37,39,40,42,50,52,70,71,72,78,79,80,81,82,84,85,86,87,88,89,90,92,93,94,97,98,99,100,],[-58,28,-3,-4,-5,-12,-13,-14,-15,-16,-17,-18,-19,-20,-2,-11,-36,-44,-48,-53,-56,-57,-58,-6,-58,-58,91,-33,-22,-23,-34,-24,-25,93,-35,-43,-47,-52,-55,94,-21,-29,-31,-32,-58,100,-30,]),'LPAREN':([20,21,25,38,44,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,95,],[38,38,38,38,38,38,38,-37,-38,-39,-40,-41,-42,-45,-46,38,-49,-50,-51,38,-54,38,]),'NUMBER':([20,21,25,38,44,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,95,],[39,39,39,39,39,39,39,-37,-38,-39,-40,-41,-42,-45,-46,39,-49,-50,-51,39,-54,39,]),'EQUAL':([24,],[44,]),'SEMICOLON':([31,32,34,35,36,37,39,40,43,44,45,46,47,48,49,73,74,75,76,77,78,79,81,82,83,85,86,87,88,89,],[50,-7,-36,-44,-48,-53,-56,-57,72,75,78,79,80,81,82,-57,92,-28,-26,-27,-22,-23,-24,-25,-8,-35,-43,-47,-52,-55,]),'COMMA':([32,],[51,]),'RPAREN':([34,35,36,37,39,40,69,85,86,87,88,89,],[-36,-44,-48,-53,-56,-57,89,-35,-43,-47,-52,-55,]),'LESS':([34,35,36,37,39,40,73,86,87,88,89,],[55,-44,-48,-53,-56,-57,-57,-43,-47,-52,-55,]),'LESSEQUAL':([34,35,36,37,39,40,73,86,87,88,89,],[56,-44,-48,-53,-56,-57,-57,-43,-47,-52,-55,]),'GREATER':([34,35,36,37,39,40,73,86,87,88,89,],[57,-44,-48,-53,-56,-57,-57,-43,-47,-52,-55,]),'GREATEREQUAL':([34,35,36,37,39,40,73,86,87,88,89,],[58,-44,-48,-53,-56,-57,-57,-43,-47,-52,-55,]),'DEQUAL':([34,35,36,37,39,40,73,86,87,88,89,],[59,-44,-48,-53,-56,-57,-57,-43,-47,-52,-55,]),'NEQUAL':([34,35,36,37,39,40,73,86,87,88,89,],[60,-44,-48,-53,-56,-57,-57,-43,-47,-52,-55,]),'PLUS':([34,35,36,37,39,40,73,85,86,87,88,89,],[61,-44,-48,-53,-56,-57,-57,61,-43,-47,-52,-55,]),'MINUS':([34,35,36,37,39,40,73,85,86,87,88,89,],[62,-44,-48,-53,-56,-57,-57,62,-43,-47,-52,-55,]),'TIMES':([35,36,37,39,40,73,86,87,88,89,],[64,-48,-53,-56,-57,-57,64,-47,-52,-55,]),'DIVIDE':([35,36,37,39,40,73,86,87,88,89,],[65,-48,-53,-56,-57,-57,65,-47,-52,-55,]),'MOD':([35,36,37,39,40,73,86,87,88,89,],[66,-48,-53,-56,-57,-57,66,-47,-52,-55,]),'POWER':([36,37,39,40,73,87,88,89,],[68,-53,-56,-57,-57,68,-52,-55,]),'ELSE':([93,],[96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'listaDeclaracion':([3,],[4,]),'declaracion':([3,4,],[5,29,]),'declaracionVariable':([3,4,],[6,6,]),'listaSentencias':([3,4,42,52,70,98,],[7,7,71,84,90,99,]),'tipo':([3,4,],[8,8,]),'sentencia':([3,4,7,42,52,70,71,84,90,98,99,],[9,9,30,9,9,9,30,30,30,9,30,]),'empty':([3,4,42,52,70,98,],[10,10,10,10,10,10,]),'seleccion':([3,4,7,42,52,70,71,84,90,98,99,],[13,13,13,13,13,13,13,13,13,13,13,]),'iteracion':([3,4,7,42,52,70,71,84,90,98,99,],[14,14,14,14,14,14,14,14,14,14,14,]),'repeticion':([3,4,7,42,52,70,71,84,90,98,99,],[15,15,15,15,15,15,15,15,15,15,15,]),'sentIn':([3,4,7,42,52,70,71,84,90,98,99,],[16,16,16,16,16,16,16,16,16,16,16,]),'sentOut':([3,4,7,42,52,70,71,84,90,98,99,],[17,17,17,17,17,17,17,17,17,17,17,]),'asignacion':([3,4,7,42,52,70,71,84,90,98,99,],[18,18,18,18,18,18,18,18,18,18,18,]),'incremento':([3,4,7,42,44,52,70,71,84,90,98,99,],[19,19,19,19,77,19,19,19,19,19,19,19,]),'listaIdentificadores':([8,51,],[31,83,]),'expresion':([20,21,25,38,44,95,],[33,41,47,69,76,97,]),'expresionSimple':([20,21,25,38,44,53,95,],[34,34,34,34,34,85,34,]),'termino':([20,21,25,38,44,53,54,95,],[35,35,35,35,35,35,86,35,]),'factor':([20,21,25,38,44,53,54,63,95,],[36,36,36,36,36,36,36,87,36,]),'componente':([20,21,25,38,44,53,54,63,67,95,],[37,37,37,37,37,37,37,37,88,37,]),'relacionOp':([34,],[53,]),'sumaOp':([34,85,],[54,54,]),'multOp':([35,86,],[63,63,]),'potOp':([36,87,],[67,67,]),'sentExpresion':([44,],[74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> MAIN LBRACE listaDeclaracion RBRACE','programa',4,'p_programa','sintactico.py',95),
  ('listaDeclaracion -> listaDeclaracion declaracion','listaDeclaracion',2,'p_listaDeclaracion','sintactico.py',99),
  ('listaDeclaracion -> declaracion','listaDeclaracion',1,'p_listaDeclaracion','sintactico.py',100),
  ('declaracion -> declaracionVariable','declaracion',1,'p_declaracion','sintactico.py',111),
  ('declaracion -> listaSentencias','declaracion',1,'p_declaracion','sintactico.py',112),
  ('declaracionVariable -> tipo listaIdentificadores SEMICOLON','declaracionVariable',3,'p_declaracionVariable','sintactico.py',116),
  ('listaIdentificadores -> ID','listaIdentificadores',1,'p_listaIdentificadores','sintactico.py',120),
  ('listaIdentificadores -> ID COMMA listaIdentificadores','listaIdentificadores',3,'p_listaIdentificadores','sintactico.py',121),
  ('tipo -> INT','tipo',1,'p_tipo','sintactico.py',128),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintactico.py',129),
  ('listaSentencias -> listaSentencias sentencia','listaSentencias',2,'p_listaSentencias','sintactico.py',133),
  ('listaSentencias -> sentencia','listaSentencias',1,'p_listaSentencias','sintactico.py',134),
  ('listaSentencias -> empty','listaSentencias',1,'p_listaSentencias','sintactico.py',135),
  ('sentencia -> seleccion','sentencia',1,'p_sentencia','sintactico.py',144),
  ('sentencia -> iteracion','sentencia',1,'p_sentencia','sintactico.py',145),
  ('sentencia -> repeticion','sentencia',1,'p_sentencia','sintactico.py',146),
  ('sentencia -> sentIn','sentencia',1,'p_sentencia','sintactico.py',147),
  ('sentencia -> sentOut','sentencia',1,'p_sentencia','sintactico.py',148),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','sintactico.py',149),
  ('sentencia -> incremento','sentencia',1,'p_sentencia','sintactico.py',150),
  ('asignacion -> ID EQUAL sentExpresion SEMICOLON','asignacion',4,'p_asignacion','sintactico.py',154),
  ('incremento -> ID PLUSPLUS SEMICOLON','incremento',3,'p_incremento','sintactico.py',158),
  ('incremento -> ID MINUSMINUS SEMICOLON','incremento',3,'p_incremento','sintactico.py',159),
  ('incremento -> PLUSPLUS ID SEMICOLON','incremento',3,'p_incremento','sintactico.py',160),
  ('incremento -> MINUSMINUS ID SEMICOLON','incremento',3,'p_incremento','sintactico.py',161),
  ('sentExpresion -> expresion','sentExpresion',1,'p_sentExpresion','sintactico.py',168),
  ('sentExpresion -> incremento','sentExpresion',1,'p_sentExpresion','sintactico.py',169),
  ('sentExpresion -> SEMICOLON','sentExpresion',1,'p_sentExpresion','sintactico.py',170),
  ('seleccion -> IF expresion LBRACE listaSentencias RBRACE','seleccion',5,'p_seleccion','sintactico.py',177),
  ('seleccion -> IF expresion LBRACE listaSentencias RBRACE ELSE LBRACE listaSentencias RBRACE','seleccion',9,'p_seleccion','sintactico.py',178),
  ('iteracion -> WHILE expresion LBRACE listaSentencias RBRACE','iteracion',5,'p_iteracion','sintactico.py',185),
  ('repeticion -> DO LBRACE listaSentencias RBRACE WHILE expresion','repeticion',6,'p_repeticion','sintactico.py',189),
  ('sentIn -> CIN ID SEMICOLON','sentIn',3,'p_sentIn','sintactico.py',193),
  ('sentOut -> COUT expresion SEMICOLON','sentOut',3,'p_sentOut','sintactico.py',197),
  ('expresion -> expresionSimple relacionOp expresionSimple','expresion',3,'p_expresion','sintactico.py',201),
  ('expresion -> expresionSimple','expresion',1,'p_expresion','sintactico.py',202),
  ('relacionOp -> LESS','relacionOp',1,'p_relacionOp','sintactico.py',209),
  ('relacionOp -> LESSEQUAL','relacionOp',1,'p_relacionOp','sintactico.py',210),
  ('relacionOp -> GREATER','relacionOp',1,'p_relacionOp','sintactico.py',211),
  ('relacionOp -> GREATEREQUAL','relacionOp',1,'p_relacionOp','sintactico.py',212),
  ('relacionOp -> DEQUAL','relacionOp',1,'p_relacionOp','sintactico.py',213),
  ('relacionOp -> NEQUAL','relacionOp',1,'p_relacionOp','sintactico.py',214),
  ('expresionSimple -> expresionSimple sumaOp termino','expresionSimple',3,'p_expresionSimple','sintactico.py',218),
  ('expresionSimple -> termino','expresionSimple',1,'p_expresionSimple','sintactico.py',219),
  ('sumaOp -> PLUS','sumaOp',1,'p_sumaOp','sintactico.py',226),
  ('sumaOp -> MINUS','sumaOp',1,'p_sumaOp','sintactico.py',227),
  ('termino -> termino multOp factor','termino',3,'p_termino','sintactico.py',231),
  ('termino -> factor','termino',1,'p_termino','sintactico.py',232),
  ('multOp -> TIMES','multOp',1,'p_multOp','sintactico.py',239),
  ('multOp -> DIVIDE','multOp',1,'p_multOp','sintactico.py',240),
  ('multOp -> MOD','multOp',1,'p_multOp','sintactico.py',241),
  ('factor -> factor potOp componente','factor',3,'p_factor','sintactico.py',245),
  ('factor -> componente','factor',1,'p_factor','sintactico.py',246),
  ('potOp -> POWER','potOp',1,'p_potOp','sintactico.py',253),
  ('componente -> LPAREN expresion RPAREN','componente',3,'p_componente','sintactico.py',257),
  ('componente -> NUMBER','componente',1,'p_componente','sintactico.py',258),
  ('componente -> ID','componente',1,'p_componente','sintactico.py',259),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',266),
]
